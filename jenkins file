try{

node{
        def mavenHome
        def mavenCMD
        def docker
        def dockerCMD
        def tagName = "2.0"
		    def java
        def javaCMD 
        def dockerImage = "priyankakoudagani/test"
        def ansible
        def ansibleCMD
           
            
            
        
        stage('Preparation'){
            echo "Preparing the Jenkins environment with required tools..."
            mavenHome = tool name: 'Maven', type: 'maven'
            mavenCMD = "${mavenHome}/bin/mvn"
            docker = tool name: 'docker',type:'org.jenkinsci.plugins.docker.commons.tools.DockerTool'
		    ansible = tool name: 'ansible', type: 'org.jenkinsci.plugins.ansible.AnsibleInstallation'
            ansibleCMD = "${ansible}/ansible"
        }
        
        stage('git checkout'){
            echo "Checking out the code from git repo"
            git 'https://github.com/koudaganipriyanka/batch10.git'
        }
        
        stage('build'){
         echo "Building spring application"
         sh "${mavenCMD} compile"
        }
        stage('test'){
         echo "Testing application"
         sh "${mavenCMD} test"
        }
        stage('package'){
         echo "Generating jar file"
          sh "${mavenCMD} clean package"
		}
		
        stage('sonarqube'){
        echo "SonarQube"
        sh "${mavenCMD} sonar:sonar -Dsonar.host.url=http://34.121.29.221:9000 -Dsonar.projectKey=sonar -Dsonar.login=admin -Dsonar.password=sonar  -Dsonar.java.binaries=target"
        }
		
        stage('Publish Report'){
        echo " Publishing HTML report.."
        publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: false, reportDir: '', reportFiles: 'index.html', reportName: 'HTML Report', reportTitles: ''])
            
        }  

        stage('build docker image'){
        echo "Build Docker image from Dockerfile"
        sh "docker build -t ${dockerImage}:${tagName} ."
        }
            
	    stage('Push to DockerHub'){
        echo "Push Docker Image to DockerHub Online Registry"
        withCredentials([usernamePassword(credentialsId: 'Docker2', passwordVariable: 'dockerpwd', usernameVariable: 'dockeruser')]) {
        sh "docker login"
        "u ${dockeruser}"
        "-p ${dockerpwd}"
        sh "docker push  ${dockerImage}:${tagName}"
        }
    
        }
    
        stage('Deploy Application using Ansible'){
        echo "Install Docker in Ansible machines"
        echo "deploying  application"
        ansiblePlaybook credentialsId: 'Ansible', disableHostKeyChecking: true, installation: 'ansible', inventory: '/etc/ansible/hosts', playbook: 'deploy-playbook.yml'
        }

        stage('Clean up'){
        echo "Cleaning up the workspace..."
        cleanWs()
        }
        stage('Email test'){
            emailext attachLog: true, body: 'Hello priyanka ,This is yours casestudy log report.', subject: 'casestudy pipeline', to: 'priyankakoudagani@gmail.com'
        }
        }

catch(Exception err){
        echo "Exception occured."
        currentBuild.result="FAILURE"
}
finally{
       (currentBuild.result!= "ABORTED") && node("master") {
        echo "finally gets executed and end an email notification for every build"
}
}
